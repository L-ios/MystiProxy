name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux-gnu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu ]
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      run: rustup target add ${{ matrix.target }}
    - name: Build and Archive
      uses: ./.github/workflows/build-and-archive.yml
      with:
        target: ${{ matrix.target }}

  build-linux-musl:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-musl, aarch64-unknown-linux-musl ]
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      run: rustup target add ${{ matrix.target }}
    - name: Install musl-tools
      run: sudo apt-get update && sudo apt-get install -y musl-tools
    - name: Build and Archive
      uses: ./.github/workflows/build-and-archive.yml
      with:
        target: ${{ matrix.target }}

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [ x86_64-pc-windows-gnu ]
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust toolchain
      run: rustup target add ${{ matrix.target }}
    - name: Build and Archive
      uses: ./.github/workflows/build-and-archive.yml
      with:
        target: ${{ matrix.target }}
